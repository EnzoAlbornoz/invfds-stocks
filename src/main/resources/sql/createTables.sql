CREATE TABLE IF NOT EXISTS `cadastro_cias_abertas` (
	`CNPJ_CIA` VARCHAR(20) NOT NULL,
	`DENOM_SOCIAL` VARCHAR(100) NOT NULL,
	`SITUACAO` VARCHAR(40) NOT NULL,
	PRIMARY KEY (`CNPJ_CIA`)
);

CREATE TABLE IF NOT EXISTS `tickers_cias_abertas` (
	`TICKER` VARCHAR(12) NOT NULL,
	`CNPJ_CIA` VARCHAR(20) NOT NULL,
	PRIMARY KEY (`TICKER`),
	FOREIGN KEY (`CNPJ_CIA`) REFERENCES `cadastro_cias_abertas`(`CNPJ_CIA`)
);


CREATE TABLE IF NOT EXISTS `serie_hist_cias_abertas` (
	`TICKER` VARCHAR(12) NOT NULL,
	`DT_PREGAO` DATE NOT NULL,
	`MOEDA` VARCHAR(4) NOT NULL,
	`PRE_ABE` DECIMAL(11,2) NOT NULL,
	`PRE_MAX` DECIMAL(11,2) NOT NULL,
	`PRE_MIN` DECIMAL(11,2) NOT NULL,
	`PRE_MED` DECIMAL(11,2) NOT NULL,
	`PRE_FCH` DECIMAL(11,2) NOT NULL,
	PRIMARY KEY (`TICKER`,`DT_PREGAO`),
	FOREIGN KEY (`TICKER`) REFERENCES `tickers_cias_abertas`(`TICKER`)
);

CREATE TABLE IF NOT EXISTS `dre_cias_abertas` (
    `CNPJ_CIA` VARCHAR(20) NOT NULL,
    `DT_REFERENCIA_INI` DATE NOT NULL,
    `DT_REFERENCIA_FIM` DATE NOT NULL,
    `MOEDA` VARCHAR(4) NOT NULL,
    `MOEDA_ESCALA` VARCHAR(10) NOT NULL,
    `COD_CONTA` VARCHAR(20) NOT NULL,
    `DSC_CONTA` VARCHAR(255) NOT NULL,
    `VAL_CONTA` DECIMAL(29, 10) NOT NULL,
    PRIMARY KEY (`CNPJ_CIA`, `DT_REFERENCIA_INI`, `COD_CONTA`),
    KEY `dre_cias_abertas_DSC_CONTA_IDX` (`DSC_CONTA`) USING BTREE,
    FOREIGN KEY (`CNPJ_CIA`) REFERENCES `cadastro_cias_abertas`(`CNPJ_CIA`)
);

CREATE TABLE IF NOT EXISTS `bpa_cias_abertas` (
    `CNPJ_CIA` VARCHAR(20) NOT NULL,
    `DT_REFERENCIA_INI` DATE NOT NULL,
    `DT_REFERENCIA_FIM` DATE NOT NULL,
    `MOEDA` VARCHAR(4) NOT NULL,
    `MOEDA_ESCALA` VARCHAR(10) NOT NULL,
    `COD_CONTA` VARCHAR(20) NOT NULL,
    `DSC_CONTA` VARCHAR(255) NOT NULL,
    `VAL_CONTA` DECIMAL(29, 10) NOT NULL,
    PRIMARY KEY (`CNPJ_CIA`, `DT_REFERENCIA_INI`, `COD_CONTA`),
    KEY `dre_cias_abertas_DSC_CONTA_IDX` (`DSC_CONTA`) USING BTREE,
    FOREIGN KEY (`CNPJ_CIA`) REFERENCES `cadastro_cias_abertas`(`CNPJ_CIA`)
);

CREATE TABLE IF NOT EXISTS `bpp_cias_abertas` (
    `CNPJ_CIA` VARCHAR(20) NOT NULL,
    `DT_REFERENCIA_INI` DATE NOT NULL,
    `DT_REFERENCIA_FIM` DATE NOT NULL,
    `MOEDA` VARCHAR(4) NOT NULL,
    `MOEDA_ESCALA` VARCHAR(10) NOT NULL,
    `COD_CONTA` VARCHAR(20) NOT NULL,
    `DSC_CONTA` VARCHAR(255) NOT NULL,
    `VAL_CONTA` DECIMAL(29, 10) NOT NULL,
    PRIMARY KEY (`CNPJ_CIA`, `DT_REFERENCIA_INI`, `COD_CONTA`),
    KEY `dre_cias_abertas_DSC_CONTA_IDX` (`DSC_CONTA`) USING BTREE,
    FOREIGN KEY (`CNPJ_CIA`) REFERENCES `cadastro_cias_abertas`(`CNPJ_CIA`)
);

CREATE OR REPLACE
VIEW `ind_cias_abertas`
AS
	WITH
		DRE AS (
			SELECT
				DRE.CNPJ_CIA,
				DRE.DT_REFERENCIA_FIM,
				DRE.DT_REFERENCIA_INI,
				DRE.MOEDA,
				MAX(
					IF(
						DRE.DSC_CONTA IN ('ON', 'Lucro Básico por Ação', 'Lucro por lote de mil ações') AND DRE.COD_CONTA IN ('3.99', '3.99.01.01', "3.99.01.02"),
						DRE.VAL_CONTA,
						NULL
					)
				) AS VAL_ON,
				MAX(
					IF(
						DRE.DSC_CONTA IN ('PN', 'PNA', 'Lucro Básico por Ação', 'Lucro por lote de mil ações') AND DRE.COD_CONTA IN ('3.99', '3.99.01.01', "3.99.01.02"),
						DRE.VAL_CONTA,
						NULL
					)
				) AS VAL_PN,
				MAX(
					IF(
						DRE.COD_CONTA = '3.01',
						IF(DRE.MOEDA_ESCALA = 'MIL', DRE.VAL_CONTA * 1000, DRE.VAL_CONTA),
						NULL
					)
				) AS VAL_REC_LIQ,
				MAX(
					IF(
						DRE.COD_CONTA = '3.03',
						IF(DRE.MOEDA_ESCALA = 'MIL', DRE.VAL_CONTA * 1000, DRE.VAL_CONTA),
						NULL
					)
				) AS VAL_LUCRO_BRUTO,
				SUM(
					IF(
						DRE.COD_CONTA IN ("3.03", "3.04.01", "3.04.02"),
						IF(DRE.MOEDA_ESCALA = 'MIL', DRE.VAL_CONTA * 1000, DRE.VAL_CONTA),
						NULL
					)
				) AS VAL_EBIT,
				MAX(
					IF(
						DRE.COD_CONTA = '3.11.01',
						IF(DRE.MOEDA_ESCALA = 'MIL', DRE.VAL_CONTA * 1000, DRE.VAL_CONTA),
						NULL
					)
				) AS VAL_LL,
				SUM(
					IF(
						DRE.COD_CONTA = '3.04'
						AND (
							LOWER(DRE.DSC_CONTA) LIKE '%depre%'
								OR
							LOWER(DRE.DSC_CONTA) LIKE '%amor%'
						),
						IF(DRE.MOEDA_ESCALA = 'MIL', -DRE.VAL_CONTA * 1000, -DRE.VAL_CONTA),
						0
					)
				) AS VAL_AM_DP
			FROM dre_cias_abertas DRE
			WHERE 1=1
				AND DRE.VAL_CONTA <> 0
				AND DRE.COD_CONTA IN ('3.99', '3.99.01.01', "3.99.01.02", '3.01', "3.04", "3.03", "3.04.01", "3.04.02", "3.11.01")
			GROUP BY CNPJ_CIA, DRE.DT_REFERENCIA_INI, DT_REFERENCIA_FIM
		),
		BPP AS (
			SELECT
				CNPJ_CIA,
				DT_REFERENCIA_FIM,
				MAX(
					IF(
						COD_CONTA = '2',
						IF(MOEDA_ESCALA = 'MIL', VAL_CONTA * 1000, VAL_CONTA),
						NULL
					)
				) AS VAL_PASS,
				MAX(
					IF(
						COD_CONTA = '2.01',
						IF(MOEDA_ESCALA = 'MIL', VAL_CONTA * 1000, VAL_CONTA),
						NULL
					)
				) AS VAL_PASS_CIRCU,
				MAX(
					IF(
						COD_CONTA = '2.01.02',
						IF(MOEDA_ESCALA = 'MIL', VAL_CONTA * 1000, VAL_CONTA),
						NULL
					)
				) AS VAL_FORNECEDOR,
				SUM(
					IF(
						COD_CONTA IN ('2.01.04', '2.02.01'),
						IF(MOEDA_ESCALA = 'MIL', VAL_CONTA * 1000, VAL_CONTA),
						NULL
					)
				) AS VAL_DIV_BRUTA,
				SUM(
					IF(
						COD_CONTA IN ('2.03', '2.03.09'),
						IF(MOEDA_ESCALA = 'MIL', VAL_CONTA * 1000, VAL_CONTA) * IF(COD_CONTA = '2.03', 1, -1),
						NULL
					)
				) AS VAL_PL
			FROM bpp_cias_abertas
			WHERE 1=1
				AND VAL_CONTA <> 0
				AND COD_CONTA IN ('2', '2.01', '2.01.02', '2.01.04', '2.02.01', '2.03', '2.03.09')
			GROUP BY CNPJ_CIA, DT_REFERENCIA_FIM
		),
		BPA AS (
			SELECT
				CNPJ_CIA,
				DT_REFERENCIA_FIM,
				SUM(
					IF(
						COD_CONTA IN ('1.01.01', '1.01.02'),
						IF(MOEDA_ESCALA = 'MIL', VAL_CONTA * 1000, VAL_CONTA),
						NULL
					)
				) AS VAL_CX,
				MAX(
					IF(
						COD_CONTA = '1',
						IF(MOEDA_ESCALA = 'MIL', VAL_CONTA * 1000, VAL_CONTA),
						NULL
					)
				) AS VAL_ATIVO,
				MAX(
					IF(
						COD_CONTA = '1.01',
						IF(MOEDA_ESCALA = 'MIL', VAL_CONTA * 1000, VAL_CONTA),
						NULL
					)
				) AS VAL_ATIVO_CIRCU
			FROM bpa_cias_abertas
			WHERE 1=1
				AND VAL_CONTA <> 0
				AND COD_CONTA IN ('1', '1.01', '1.01.01', '1.01.02')
			GROUP BY CNPJ_CIA, DT_REFERENCIA_FIM
		)
	SELECT
		SH.TICKER,
		SH.DT_PREGAO,
		TK.CNPJ_CIA,
		CC.DENOM_SOCIAL,
		SH.PRE_FCH AS PRECO,
		((SH.PRE_FCH * (FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN))))) AS VAL_DE_MERCADO,
		((SH.PRE_FCH * (FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN)))) + (BPP.VAL_DIV_BRUTA - BPA.VAL_CX)) AS VAL_DE_FIRMA,
		FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN)) AS QTD_ACOES,
		BPA.VAL_ATIVO AS ATIVO_TOT,
		BPA.VAL_CX AS ATIVO_DISP,
		BPA.VAL_ATIVO_CIRCU AS ATIVO_CIRC,
		BPP.VAL_DIV_BRUTA AS DIVIDA_BRUTA,
		BPP.VAL_DIV_BRUTA - BPA.VAL_CX AS DIVIDA_LIQ,
		BPP.VAL_PL AS PAT_LIQ,
		DRE.VAL_REC_LIQ AS RECEITA_LIQ,
		DRE.VAL_EBIT AS EBIT,
		DRE.VAL_LL AS LUCRO_LIQ,
		(SH.PRE_FCH / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN)) AS P_L,
		(SH.PRE_FCH / (BPP.VAL_PL / FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN)))) AS P_VP,
		(SH.PRE_FCH / (DRE.VAL_EBIT / (FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN))))) AS P_EBIT,
		(SH.PRE_FCH / (DRE.VAL_REC_LIQ / (FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN))))) AS PSR,
		(SH.PRE_FCH / (BPA.VAL_ATIVO  / (FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN))))) AS P_ATIVOS,
		(SH.PRE_FCH / ((BPA.VAL_ATIVO_CIRCU - BPP .VAL_PASS_CIRCU) / (FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN))))) AS P_CAP_GIRO,
		(SH.PRE_FCH / ((BPA.VAL_ATIVO_CIRCU - BPP.VAL_DIV_BRUTA) / (FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN))))) AS P_ATIVO_CIRC_LIQ,
		-- DIVIDEND_YIELD
		(
			((SH.PRE_FCH * (FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN)))) + (BPP.VAL_DIV_BRUTA - BPA.VAL_CX)) /
			(DRE.VAL_EBIT + IFNULL(DRE.VAL_AM_DP, 0))
		) AS EV_EBITDA,
		(
			((SH.PRE_FCH * (FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN)))) + (BPP.VAL_DIV_BRUTA - BPA.VAL_CX)) /
			DRE.VAL_EBIT
		) AS EV_EBIT,
		IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN) AS LPA,
		((BPP.VAL_PL) / (FLOOR(DRE.VAL_LL / IF(SH.TICKER LIKE '%3', DRE.VAL_ON, DRE.VAL_PN)))) AS VPA,
		(DRE.VAL_LUCRO_BRUTO / DRE.VAL_REC_LIQ) AS MARGEM_BRUTA,
		(DRE.VAL_EBIT / DRE.VAL_REC_LIQ) AS MARGEM_EBIT,
		(DRE.VAL_LL / DRE.VAL_REC_LIQ) AS MARGEM_LIQ,
		(DRE.VAL_EBIT / BPA.VAL_ATIVO) AS EBIT_ATIVO,
		(DRE.VAL_EBIT / (BPA.VAL_ATIVO - BPP.VAL_FORNECEDOR - BPA.VAL_CX)) AS ROIC,
		(DRE.VAL_LL / BPP.VAL_PL) AS ROE,
		(BPA.VAL_ATIVO_CIRCU / BPP.VAL_PASS_CIRCU) AS LIQ_CORRENTE,
		(BPP.VAL_DIV_BRUTA / BPP.VAL_PL) AS DIV_BRUTA__PAT_LIQ,
		(DRE.VAL_REC_LIQ / BPA.VAL_ATIVO) AS GIRO_ATIVOS
	FROM serie_hist_cias_abertas SH
		JOIN tickers_cias_abertas TK ON
			TK.TICKER = SH.TICKER
		JOIN cadastro_cias_abertas CC ON
			CC.CNPJ_CIA = TK.CNPJ_CIA
		LEFT JOIN DRE ON 1=1
			AND DRE.CNPJ_CIA = CC.CNPJ_CIA
			AND SH.DT_PREGAO BETWEEN DRE.DT_REFERENCIA_INI AND DRE.DT_REFERENCIA_FIM
		LEFT JOIN BPP ON 1=1
			AND BPP.CNPJ_CIA = CC.CNPJ_CIA
			AND BPP.DT_REFERENCIA_FIM = DRE.DT_REFERENCIA_FIM
		LEFT JOIN BPA ON 1=1
			AND BPA.CNPJ_CIA = CC.CNPJ_CIA
			AND BPA.DT_REFERENCIA_FIM = DRE.DT_REFERENCIA_FIM;
